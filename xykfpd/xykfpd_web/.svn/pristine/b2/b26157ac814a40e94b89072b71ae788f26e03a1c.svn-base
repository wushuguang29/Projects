<template>
  <div class="desktop">
    <!-- 顶部 -->
    <TopBarMenu></TopBarMenu>
    <div style="overflow: scroll">
      <div class="router-box">
        <template v-for="item in topMenu">
          <div :class="item.name" @click="routeGo(item.name)">
            <img :src="require('@/assets/img/desktop_' + item.name + '.png')" />
            <span>{{ item.title }}</span>
          </div>
        </template>
      </div>
      <div class="mid-box">
        <div class="mid-left">
          <div class="left-title">康复评测信息汇总</div>
          <div class="project-box">
            <div>
              <div class="top">用户总数</div>
              <div class="body">{{userNumber}}</div>
            </div>
            <div>
              <div class="top">评测总人数</div>
              <div class="body">{{evaluatingPopuNumber}}</div>
            </div>
             <div>
              <div class="top">评测总次数</div>
              <div class="body">{{evaluatingNumber}}</div>
            </div>
          </div>
          <div class="list">
           <div>每月评测人数/次数汇总</div>
          </div>
        </div>
       
      </div>
      <div class="bottom-box">
        <div class="bottom-left">
          <div class="left-title">康复评测领域排名</div>
          <el-table
            :data="tableData"
            :header-cell-style="{ background: 'rgba(0, 135, 254, .1)' }"
            style="width: 100%; box-sizing: border-box"
            size="mini"
          >
            <el-table-column
              prop="id"
              label="序号"
              width="50"
            ></el-table-column>
            <el-table-column prop="domain_str" label="领域"></el-table-column>
            <el-table-column prop="evaluating_population_number" label="评测人数"></el-table-column>
            <el-table-column prop="evaluating_number" label="评测次数"></el-table-column>
            <el-table-column prop="ratio" label="评测率占比">
              <template slot-scope="scope">
                <el-progress
                  :percentage="scope.row.ratio"
                  :stroke-width="10"
                ></el-progress>
              </template>
            </el-table-column>
          </el-table>
        </div>
        <div class="bottom-right">
          <div class="left-title">
          康复评测方面排名
            <!-- <span> <i>45</i>条 </span> -->
          </div>
          <el-table
            :data="tableDataRight"
            :header-cell-style="{ background: 'rgba(0, 135, 254, .1)' }"
            style="width: 100%; box-sizing: border-box"
            size="mini"
          >
            <el-table-column
              prop="id"
              label="序号"
              width="50"
            ></el-table-column>
            <el-table-column prop="side" label="方面"></el-table-column>
            <el-table-column prop="evaluating_population_number" label="评测人数"></el-table-column>
            <el-table-column prop="evaluating_number" label="评测次数"></el-table-column>
            <el-table-column prop="ratio" label="评测率占比">
                <template slot-scope="scope">
                <el-progress
                  :percentage="scope.row.ratio"
                  :stroke-width="10"
                ></el-progress>
              </template>

            </el-table-column>
             
          </el-table>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
import TopBarMenu from "@/layout/components/TopBar";
import { mapGetters, mapMutations } from "vuex";
import { summary } from "@/api/desktop.js";
export default {
  name: "Desktop",
  components: {
    TopBarMenu,
  },
  data() {
    return {
      radio: "",
      tableDataRight: [],
      tableData: [],
      userNumber:0,
      evaluatingPopuNumber:0,
      evaluatingNumber:0
    };
  },
  created(){
    summary().then((res) => {

        this.tableData = res.data.domain;
        this.tableDataRight = res.data.side;
        this.userNumber = res.data.summary.userNumber;
        this.evaluatingPopuNumber = res.data.summary.evaluatingPopuNumber;
        this.evaluatingNumber = res.data.summary.evaluatingNumber;

    });
  },
  computed: {
    ...mapGetters(["topMenu"]),
  },
  methods: {
    ...mapGetters(["menu", "defaultActiveMenu"]),
    ...mapMutations(["setCurrentMenu", "setDefaultActiveMenu"]),
    drawLine() {
      // 基于准备好的dom，初始化echarts实例
      let myChart = this.$echarts.init(document.getElementById("echarts"));
      // 绘制图表
      myChart.setOption({
        legend: {},
        grid: {
          x: 35,
          y: 30,
          x2: 25,
          y2: 40,
          borderWidth: 1,
        },
        color: ["#0088FE"], //设置区分（每条线是什么颜色，和 legend 一一对应）
        xAxis: {
          //设置x轴
          type: "category",
          boundaryGap: false, //坐标轴两边不留白
          data: ["7.11", "7.12", "7.13", "7.14", "7.15", "7.16", "7.17"],
          nameTextStyle: {
            //坐标轴名称的文字样式
            color: "#333333",
            fontSize: 16,
            padding: [0, 0, 0, 20],
          },
          axisLine: {
            //坐标轴轴线相关设置。
            lineStyle: {
              color: "#999999",
            },
          },
          splitLine: {
            show: false,
          },
        },
        yAxis: {
          nameTextStyle: {
            color: "#333333",
            fontSize: 16,
            padding: [0, 0, 10, 0],
          },
          splitLine: {
            show: true,
            lineStyle: {
              type: "dashed",
            },
          },
          axisLine: {
            lineStyle: {
              color: "#999999",
            },
          },
          type: "value",
        },
        series: [
          {
            data: [220, 232, 201, 234, 290, 230, 220],
            type: "line", // 类型为折线图
            smooth: true,
            lineStyle: {
              // 线条样式 => 必须使用normal属性
              normal: {
                color: "#0088FE",
              },
            },
            symbolSize: 8,
            areaStyle: {
              normal: {
                color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [
                  { offset: 0, color: "#0018FF" },
                  { offset: 1, color: "#96b1ff" },
                ]),
              },
            },
          },
        ],
      });
    },
    routeGo(routeName) {
      const meunArr = this.menu();
      let menuIndex = 0;
      let activeName = 0;
      let defaultActiveIndex = "";
      meunArr.forEach((each, index) => {
        if (each.front_router_name === routeName) {
          menuIndex = index;
          activeName = each.title;
          defaultActiveIndex = each.children[0].front_router_name;
          this.$router.push({
            path: each.children[0].front_router_name,
          });
        }
      });
      this.setCurrentMenu(menuIndex);
      this.setDefaultActiveMenu(defaultActiveIndex);
      console.log(this.defaultActiveMenu());
    },
  },
};
</script>

<style scoped lang="scss">
.desktop {
  background-color: #e9f1ff;
  width: 100%;
  height: 100%;
  .router-box {
    width: 100%;
    height: 180px;
    box-sizing: border-box;
    padding: 20px 40px 0 40px;
    display: flex;
    div {
      flex: 1;
      width: 240px;
      height: 160px;
      position: relative;
      margin-right: 20px;
      border-radius: 10px;
      line-height: 160px;
      text-align: center;
      cursor: pointer;
      img {
        display: inline-block;
      }
      span {
        display: block;
        color: #fff;
        line-height: 16px;
        position: absolute;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        letter-spacing: 3px;
      }
    }
    .project {
      background: linear-gradient(
        180deg,
        rgba(39, 204, 93, 1) 0%,
        rgba(39, 204, 163, 1) 100%
      );
    }
    .business{
       background: linear-gradient(
        0deg,
        rgba(27, 228, 0, 0.938) 0%,
        rgb(0, 228, 160) 100%
      );
    }
    .evaluation{
      background: linear-gradient(
        0deg,
        rgba(27, 228, 0, 0.938) 0%,
        rgb(0, 228, 160) 100%
      );
    }
    .system {
      background: linear-gradient(
        0deg,
        rgba(0, 64, 228, 1) 0%,
        rgba(0, 97, 228, 1) 100%
      );
    }
    .house {
      background: linear-gradient(
        0deg,
        rgba(0, 120, 254, 1) 0%,
        rgba(0, 136, 254, 1) 100%
      );
    }
    .archives {
      background: linear-gradient(
        0deg,
        rgba(97, 38, 247, 1) 0%,
        rgba(116, 61, 255, 1) 100%
      );
    }
    .finance {
      background: linear-gradient(
        180deg,
        rgba(71, 195, 168, 1) 0%,
        rgba(9, 173, 183, 1) 100%
      );
    }
    .business {
      background: linear-gradient(
        0deg,
        rgba(62, 98, 255, 1) 0%,
        rgba(62, 115, 255, 1) 100%
      );
    }
    .statistics {
      background: linear-gradient(
        0deg,
        rgba(39, 159, 204, 1) 0%,
        rgba(39, 183, 204, 1) 100%
      );
    }
  }
  .mid-box {
    width: 100%;
    height: 390px;
    display: flex;
    box-sizing: border-box;
    margin: 20px 0 20px 0;
    padding: 0 40px 0 40px;
    .mid-left {
      height: 100%;
      flex: 302;
      background-color: white;
      border-radius: 10px;
      padding: 20px;
      box-sizing: border-box;
      float: left;
      .left-title {
        text-align: left;
        letter-spacing: 5px;
        height: 18px;
        font-size: 18px;
        font-family: Microsoft YaHei;
        font-weight: 400;
        color: rgba(0, 0, 0, 1);
        line-height: 24px;
      }
      .project-box {
        width: 100%;
        height: 120px;
        box-sizing: border-box;
        border-bottom: 2px dashed rgba(220, 220, 220, 1);
        display: flex;
        > div {
          flex: 1;
          text-align: left;
          .top {
            margin: 15px 0 15px 0;
            color: #999999;
          }
          .body {
            font-size: 40px;
            font-weight: 400;
            color: #0087fe;
          }
        }
      }
      .list {
        width: 100%;
        > div {
          text-align: left;
          float: left;
          width: 50%;
          height: 55px;
          line-height: 55px;
          color: #999999;
          i {
            display: inline-block;
            margin-bottom: -2px;
            margin-right: 15px;
            width: 10px;
            height: 10px;
            background: rgba(255, 255, 255, 1);
            border: 3px solid rgba(0, 135, 254, 1);
            border-radius: 50%;
          }
          span {
            color: black;
            float: right;
            margin-right: 20px;
          }
        }
      }
    }
    .mid-right {
      float: right;
      flex: 410;
      height: 100%;
      background-color: white;
      border-radius: 10px;
      padding: 20px;
      margin-left: 20px;
      box-sizing: border-box;
      .right-title {
        text-align: left;
        letter-spacing: 5px;
        height: 18px;
        font-size: 18px;
        font-family: Microsoft YaHei;
        font-weight: 400;
        color: rgba(0, 0, 0, 1);
        line-height: 24px;
      }
    }
  }
  .bottom-box {
    width: 100%;
    height: 260px;
    display: flex;
    box-sizing: border-box;
    padding: 0 40px 0 40px;
    thead {
      background-color: #0087fe !important;
    }
    .left-title {
      text-align: left;
      letter-spacing: 5px;
      height: 18px;
      font-size: 18px;
      font-family: Microsoft YaHei;
      font-weight: 400;
      color: rgba(0, 0, 0, 1);
      line-height: 24px;
      margin-bottom: 10px;
      span {
        display: inline-block;
        margin-left: 37px;
        color: #999;
        font-size: 14px;
        i {
          font-style: normal;
          font-size: 18px;
          color: #0088fe;
        }
      }
    }
    .bottom-left {
      height: 100%;
      flex: 302;
      background-color: white;
      border-radius: 10px;
      padding: 20px;
      box-sizing: border-box;
      float: left;
      overflow: hidden;
    }
    .bottom-right {
      height: 100%;
      flex: 410;
      background-color: white;
      border-radius: 10px;
      margin-left: 20px;
      padding: 20px;
      box-sizing: border-box;
      float: left;
    }
  }
}
</style>
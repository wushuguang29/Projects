import Vue from "vue";
import Router from "vue-router";
import store from "@/store";
import login from "@/views/login/index";
import desktop from "@/views/Desktop";
import { generateRouter } from "@/utils/common";
const originalPush = Router.prototype.push;
Router.prototype.push = function push(location) {
  return originalPush.call(this, location).catch((err) => err);
};

const originalReplace = Router.prototype.replace;
Router.prototype.replace = function repalce(location, onResolve, onReject) {
  if (onResolve || onReject)
    return originalReplace.call(this, location, onResolve, onReject);
  return originalReplace.call(this, location).catch((err) => err);
};
Vue.use(Router);

const createRouter = () =>
  new Router({
    routes: [
      {
        path: "/login",
        name: "login",
        meta: {
          requireAuth: false,
        },
        component: login,
      },
      {
        path: "/desktop",
        name: "desktop",
        component: desktop,
        meta: {
          requireAuth: false,
        },
      },
    ],
  });
const router = createRouter();
export function resetRouter() {
  const newRouter = createRouter();
  router.matcher = newRouter.matcher;
}

let routes = [];
const ansyRoutes = [
  {
    path: "/",
    name: "main",
    redirect: "/Home",
    component: (resolve) => require(["@/views/Main.vue"], resolve),
    children: [
      {
        path: "/Home",
        name: "Home",
        component: (resolve) => require(["@/views/Home.vue"], resolve),
      },
    ],
  },
];
// 拦截登录，token验证
router.beforeEach((to, from, next) => {
  // NProgress.start()
  console.log(to, from, next);
  let menu = store.state.menu.menu;
  if (to.meta.requireAuth === undefined) {
    if (store.state.user.isLogin) {
      // console.log(ansyRoutes,routes.length , menu.length)
      if (!routes.length && menu.length) {
        routes = routes.concat(generateRouter(menu, []));
        console.log(routes);
        ansyRoutes[0].children = ansyRoutes[0].children.concat(routes);
        router.addRoutes(ansyRoutes);
        router.options.routes.push(ansyRoutes);
        console.log("routes:", routes);
        next({
          ...to,
          replace: true,
        });
      }
      if (to.path === "/login") {
        next({
          path: "/",
        });
      } else {
        next();
      }
    } else {
      next({
        path: "/login",
      });
    }
  } else {
    next();
  }
});
/* 路由异常错误处理，尝试解析一个异步组件时发生错误，重新渲染目标页面 */
router.onError((error) => {
  const pattern = /Loading chunk (\d)+ failed/g;
  const isChunkLoadFailed = error.message.match(pattern);
  const targetPath = router.history.pending.fullPath;
  if (isChunkLoadFailed) {
    router.replace(targetPath);
  }
});
export default router;

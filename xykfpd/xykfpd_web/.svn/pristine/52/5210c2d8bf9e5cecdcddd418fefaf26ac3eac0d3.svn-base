<!--
 * @Author: your name
 * @Date: 2021-01-11 14:35:20
 * @LastEditTime: 2021-01-19 11:45:31
 * @LastEditors: Please set LastEditors
 * @Description: In User Settings Edit
 * @FilePath: \xykfpd_web\src\views\system\chat\table.vue
-->
<template>
  <div id="table" style="padding: 14px 10px 0 0; height: calc(100% - 50px);line-height: 32px;">
    <div class="searchWord">
      <!-- <div style="display: inline-block"> 搜索：</div> -->
      <!-- <el-input v-model="search" style="display: inline-block;width: 100%" 
        placeholder="请输入搜索内容">
      </el-input> -->
      <el-row :gutter="20">
  <el-col :span="4">
    方面:
     <el-select v-model="side"   multiple @change="Dchange" clearable placeholder="请选择">
    <el-option
      v-for="item in  domain"
      :key="item.id"
      :label="item.name"
      :value="item.id"
    
      >
    </el-option>
  </el-select>
  </el-col>
  <el-col :span="4">
     所属疾病:
     <el-select v-model="form.affiliated_disease"  @change="Achange" clearable placeholder="请选择">
    <el-option
      v-for="item in  disease"
      :key="item.id"
      :label="item.name"
      :value="item.id"
      
      >
    </el-option>
     </el-select>
  </el-col>
  <el-col :span="6">
    <div class="block">
    <span class="demonstration">评测时间:</span>
    <el-date-picker
    @change="Timechange"
      v-model="form.value1"
      type="daterange"
      range-separator="至"
      start-placeholder="开始日期"
      end-placeholder="结束日期"
      value-format="yyyy-MM-dd "
       format="yyyy-MM-dd "
      >
    </el-date-picker>
  </div>
  </el-col>
  <el-col :span="6"><div class="grid-content bg-purple"><el-button type="primary" style="float: left;"  @click="search">搜索</el-button><el-button type="primary" style="float: left;" @click="Reset">重置</el-button></div></el-col>
</el-row> 
    </div>
    <el-table
      :data="tableData"
    :height="tableHeight"
   
    >
      <el-table-column
        v-for="item in header"
        :label="item.label"
        :prop="item.prop"
        :width="item.width"
        :key="item.id"
      >
        <el-table-column
          v-if="item.children || item.children.length>0"
          v-for="item1 in item.children"
          :label="item1.label"
          :prop="item1.prop"
          :width="item1.width"
          :key="item1.id"
        >
          <el-table-column
            v-if="item1.children || item1.children.length > 0"
            v-for="item2 in item1.children"
            :label="item2.label"
            :prop="item2.prop"
            :width="item2.width"
            :key="item2.id"
          >
            <el-table-column 
              v-if="item2.children || item2.children.length > 0"
              v-for="item3 in item2.children"
              :label="item3.label"
              :prop="item3.prop"
              :width="item3.width"
              :key="item3.id"
            >
            </el-table-column>
          </el-table-column>
        </el-table-column>
      </el-table-column>
    </el-table>
  </div>
</template>

<script>
import { getList } from "@/api/analysis.js";
import { getBaseConfig } from "@/utils/common";
export default {
  name: "uaerAnalysis",
  data() {
    return {
      side:[],
      tableHeight: window.innerHeight-200 || document.documentElement.clientHeight-200 || document.body.clientHeight - 200,
      value1: [],
        value2: [],
      form:{
        affiliated_disease:""
      },
      disease:[],
       domain:[],
      tableData:[],
      header: [],
    };
  },
 mounted() {
      const that = this
      window.onresize = () => {
        return (() => {
          console.log("111",window.innerHeight,document.documentElement.clientHeight,document.body.clientHeight)
          window.tableHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight
          that.tableHeight = window.tableHeight - that.$refs.queryHeight.offsetHeight - 200
        })()
      }
    },
  methods:{
    Reset(){
      this.form={};
       this.getlist(this.form)
    },
    search(){
      console.log("e",this.form)
      this.getlist(this.form)
    },
    getlist(e){

       getList(e).then((res) => {
        console.log(res.data);
        this.tableData = res.data.body;
        this.header = res.data.head;
    });
    },
    Timechange(e){
      console.log(e)
      this.form.begin=e[0]
      this.form.end=e[1]
      console.log( this.form);
      this.getlist(this.form)
    },
    Achange(e){
     
       this.getlist(this.form)
    },
    Dchange(e){
      console.log(e)
      // this.form.side=e.toString()
      // console.log(this.form.side)
    this.form.side=this.side.toString();
    this.getlist(this.form)
    },
  },
  created(){
     this.domain=getBaseConfig("DOMAIN",true);
      this.disease=getBaseConfig("AFFILIATED_DISEASE",true);
      console.log( " this.disease",this.domain, this.disease)
     console.log("domain",this.domain)
     this.getlist(this.form)
    //搜索栏参数
    //side 方面多选  逗号拼接
    //affiliated_disease //所属疾病
    //begin //评测开始时间
    //end //评测结束时间
   
  },
  watch: {
      // 这里的定时器是为了优化，如果频繁调用window.onresize方法会造成页面卡顿，增加定时器会避免频繁调用window.onresize方法
      // timer默认值设置为false，这里相当于一个按钮，防止频繁改变时引起卡顿
      tableHeight(val) {
        if (!this.timer) {
          this.tableHeight = val
          this.timer = true
          const that = this
          setTimeout(function() {
            that.timer = false
          }, 400)
        }
      }
    },
};
</script>

<template>
  <div id="app">
    <!-- <ul>
            <li v-for="item in message_array">{{item}}</li>
        </ul>
        <input type="text" v-model="message"/>
        <button v-on:click="dealMessage">add</button> -->
    <div class="conter">
      <div class="left">
        <!-- <div class="seach">
                    <el-input v-model="form.name"></el-input><el-button icon="el-icon-search" @click="serch" circle></el-button>
                </div>
                <div class="list">
                    <el-tree :data="data" :props="defaultProps" @node-click="handleNodeClick"></el-tree>
                   <ul class="infinite-list" v-infinite-scroll="load" style="overflow:auto">
                          <li v-for="(i,index) in count" :key="index" class="infinite-list-item">{{ i.name }}</li>
                      </ul>
                </div> -->
        <el-input placeholder="输入关键字进行过滤" v-model="filterText">
        </el-input>

        <el-tree
          class="filter-tree"
          :data="data"
          :props="defaultProps"
          default-expand-all
          :filter-node-method="filterNode"
          ref="tree"
          @node-click="peopleClick"
        >
        </el-tree>
      </div>
      <div class="right">
        <el-tabs
          v-model="activeName"
          @tab-click="handleClick"
          style="height: 100%"
        >
          <el-tab-pane label="对话" name="dialogue">
            <div
              class="header"
              style="height: 5%; border-bottom: 1px solid #adadad"
            >
              <!--对话人ID-->
              <span>{{ user_name}}:{{user_phone}}</span>
            </div>
            <!-- 聊天窗口 -->
            <div class="chatContent" style="height: 70%">
              <div v-for="(item, index) in message_array" :key="index" style=" width: 100%;height: 20px;">
                <div v-if="item.from_id == '999999'" style="width: 100%; height: 20px">
                  <div style="float: right">{{ item.content }}</div>
                </div>
                <div v-else-if="item.id !== '999999'"  style="float: left; height: 20px">
                  <div >
                    {{ item.content }}
                  </div>
                </div>
                <!-- <div style="float:right">是的</div>
                           <div style="float:left">不是</div> -->
              </div>
            </div>
            <div class="footer" style="border-top: 1px solid; height: 15%">
              <div class="fonter_conter">
                <el-input type="textarea" v-model="formData.conter"></el-input>
              </div>
              <div class="fonter_btn">
                <div style="width: 20%; float: right">
                  <el-button type="primary" @click="send" plain
                    >发送</el-button
                  >
                </div>
              </div>
            </div>
          </el-tab-pane>
          <el-tab-pane label="基本信息" name="Information">
            <el-tabs v-model="Name" @tab-click="nameClick" style="height: 100%">
              <el-tab-pane label="对话" name="dialogue">
                <el-form
                  :model="formData"
                  label-width="100px"
                  class="demo-ruleForm"
                >
                  <el-row>
                    <el-col :span="12">
                      <el-form-item label="姓名" prop="name">
                        <el-input v-model="formData.name"></el-input>
                      </el-form-item>
                    </el-col>
                    <el-col :span="12">
                      <el-form-item label="年龄" prop="age">
                        <el-input v-model="formData.name"></el-input>
                      </el-form-item>
                    </el-col>
                  </el-row>
                  <el-row>
                    <el-col :span="12">
                      <el-form-item label="性别" prop="sex">
                        <el-select
                          style="width: 100%"
                          v-model="formData.sex"
                          placeholder="请选择性别"
                        >
                          <el-option
                            v-for="item in sex"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id"
                          >
                          </el-option>
                        </el-select>
                      </el-form-item>
                    </el-col>
                    <el-col :span="12">
                      <el-form-item label="文化程度" prop="degree_education">
                        <el-select
                          style="width: 100%"
                          v-model="formData.degree_education"
                          placeholder="请选择文化程度"
                        >
                          <el-option
                            v-for="item in culture"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id"
                          >
                          </el-option>
                        </el-select>
                      </el-form-item>
                    </el-col>
                  </el-row>
                  <el-row>
                    <el-col :span="12">
                      <el-form-item label="婚姻状况" prop="marital_condition">
                        <el-select
                          style="width: 100%"
                          v-model="formData.marital_condition"
                          placeholder="请选择婚姻状况"
                        >
                          <el-option
                            v-for="item in marriage"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id"
                          >
                          </el-option>
                        </el-select>
                      </el-form-item>
                    </el-col>
                    <el-col :span="12">
                      <el-form-item label="子女状况" prop="children_condition">
                        <el-select
                          style="width: 100%"
                          v-model="formData.children_condition"
                          placeholder="请选择子女状况"
                        >
                          <el-option
                            v-for="item in child"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id"
                          >
                          </el-option>
                        </el-select>
                      </el-form-item>
                    </el-col>
                  </el-row>
                  <el-row>
                    <el-col :span="12">
                      <el-form-item label="所属疾病" prop="affiliated_disease">
                        <el-select
                          style="width: 100%"
                          v-model="formData.affiliated_disease"
                          placeholder="请选择所属疾病"
                        >
                          <el-option
                            v-for="item in belongsDisease"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id"
                          >
                          </el-option>
                        </el-select>
                      </el-form-item>
                    </el-col>
                    <el-col :span="12">
                      <el-form-item label="所患疾病" prop="critical_disease">
                        <el-input
                          v-model="formData.critical_disease"
                        ></el-input>
                      </el-form-item>
                    </el-col>
                  </el-row>

                  <el-row>
                    <el-col :span="12">
                      <el-form-item label="身体状况" prop="physical_condition">
                        <el-select
                          style="width: 100%"
                          v-model="formData.physical_condition"
                          placeholder="请选择身体状况"
                        >
                          <el-option
                            v-for="item in body"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id"
                          >
                          </el-option>
                        </el-select>
                      </el-form-item>
                    </el-col>
                    <el-col :span="12">
                      <el-form-item label="居住环境" prop="living_condition">
                        <el-select
                          style="width: 100%"
                          v-model="formData.living_condition"
                          placeholder="请选择居住环境"
                        >
                          <el-option
                            v-for="item in livingEnvironment"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id"
                          >
                          </el-option>
                        </el-select>
                      </el-form-item>
                    </el-col>
                  </el-row>

                  <el-row>
                    <el-col :span="12">
                      <el-form-item
                        label="医保状况"
                        prop="health_insurance_type"
                      >
                        <el-select
                          style="width: 100%"
                          v-model="formData.health_insurance_type"
                          placeholder="请选择医保状况"
                        >
                          <el-option
                            v-for="item in medicalInsurance"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id"
                          >
                          </el-option>
                        </el-select>
                      </el-form-item>
                    </el-col>
                    <el-col :span="12">
                      <el-form-item label="经济来源" prop="source_finance">
                        <el-select
                          style="width: 100%"
                          v-model="formData.source_finance"
                          placeholder="请选择经济来源"
                        >
                          <el-option
                            v-for="item in economic"
                            :key="item.id"
                            :label="item.name"
                            :value="item.id"
                          >
                          </el-option>
                        </el-select>
                      </el-form-item>
                    </el-col>
                  </el-row>
                  <el-row>
                    <el-col :span="12">
                      <el-form-item label="联系电话" prop="phone">
                        <el-input v-model="formData.phone"></el-input>
                      </el-form-item>
                    </el-col>
                    <el-col :span="12">
                      <el-form-item label="邮箱" prop="emit">
                        <el-input v-model="formData.emit"></el-input>
                      </el-form-item>
                    </el-col>
                  </el-row>
                </el-form>
              </el-tab-pane>
            </el-tabs>
          </el-tab-pane>
        </el-tabs>
      </div>
    </div>
  </div>
</template>
<script>
import { getBaseConfig } from "@/utils/common";
import { boundClient,getUserList,getUserMessage,sendMessage,setMessage,getUserMemberList } from "@/api/chat.js";
let ws;
//user_id=2,user_name='弑魂';//模拟选中了2的用户
export default {
  watch: {
    filterText(val) {
      this.$refs.tree.filter(val);
    },
  },
  data() {
    return {
      formData: {},
      economic: [],
      medicalInsurance: [],
      livingEnvironment: [],
      body: [],
      belongsDisease: [],
      child: [],
      marriage: [],
      culture: [],
      sex: [],
      Name: "",
      activeName: "dialogue",
      defaultProps: {
        children: "children",
        label: "name",
      },
      filterText: "",
      form: {},
      message_array: [],
      message: "",
      data: [],
      count: [
        { id: "1", name: "羊妹甘雨" },
        { id: "2", name: "温迪" },
        { id: "3", name: "锅巴" },
      ],
      //选中人的ID和姓名/手机号
      user_id: '',
      user_name: '',
      user_phone:''
    };
  },
  methods: {
    //选择人员
    peopleClick(e) {
      this.user_id = e.uid;
      this.user_name = e.name;
      this.user_phone = e.phone;
      this.message_array = [];
      //获取聊天记录放入窗口
      this.setMessage(e.uid);
    },
    //点击发送刀窗口
    send() {
      this.handleSend();
      // let a = {},
      //   b = {
      //     id: "2",
      //     message: "是的",
      //   }; //存储当前ID聊天
      // a.id = 1;
      // //B用户回复聊天
      // a.message = this.formData.conter; //当前聊天内容
      // console.log(this.formData.conter); //当前聊天内容
      // this.message_array.push(a);
      // this.message_array.push(b);
      // console.log("是这个", this.message_array);
      // this.formData.conter = "";
      // a = {};
    },
    //发送消息
    handleSend: function (res) {
        let params = {
            'sender':999999,
            'sender_name':'湘雅康复评定中心',
            'receiver':this.user_id,
            'receiver_name':this.user_name,
            'message':this.formData.conter
        }

        sendMessage(params).then((ress)=>{
          //发送消息时 ， 从后台把数据拿出来放入上面展示
          // console.log('管理员'+params.sender_name+'给'+user_name+'发送消息');
          // this.setMessage(user_id);
          if(ress.code == 0){
            //情况发送窗口数据
            this.formData.conter = "";
            var pushData = {
              from_id:params.sender,
              from_name:params.sender_name,
              to_id:params.receiver,
              to_name:params.receiver_name,
              content:params.message,
              send_time:new Date()
            };
            this.message_array.push(pushData);
          }
            
        })
    },
    //人员list
    filterNode(value, data) {
      if (!value) return true;
      return data.name.indexOf(value) !== -1;
    },
    //切换人员信息按钮
    nameClick(tab, event) {
      console.log(tab, event);
    },
    //切换基本信息和对话
    handleClick(tab, event) {
      console.log(tab, event);
    },
    serch() {},
    handleMessage: function (msg) {
        console.log(msg);
        let data, type, client_id, params, uid;
        data = eval("(" + msg.data + ")");
        type = data.type || "";
        client_id = data.client_id;
        //管理员默认id9999
        uid = 999999;
        params = {
          unique_uid: uid,
          client_id: client_id,
        };
        switch (type) {
          case "init":
            boundClient(params).then((res) => {
                console.log('管理员客户端启动成功');
            });
            break;
          case "message":
            //判断当前打开的用户窗口是不是发送消息的用户
            var sender = data.sender;
            console.log('发送消息的人是：'+sender);
            if(this.user_id == sender){
              console.log('发送消息的人就是当前选中的人');
              //发送消息的人就是当前选中的人则将跟新消息 跟新消息放入显示栏
              this.setMessage(this.user_id);
            }
          default:
            //只要收到消息就跟新用户列表
            //is_onLine = 2 不在线 ， =1 在线
            this.setUserList();
            break;
        }
    },
    //设置用户列表
    setUserList:function(){
      getUserList().then((res) => {
        console.log('跟新用户列表');
        if(res.code == 0){
          this.data = res.data;
        }else{
          this.data = [];
        }
      });
    },
    //设置消息框
    setMessage: function(app_user_id) {
      let setMessageParams = {
        'app_user_id': app_user_id
      };
      getUserMessage(setMessageParams).then((res) => {
        //将消息放入上面区域展示
        console.log('接收消息时打印');
        console.log(res);
        this.message_array = res.data.data;
        console.log("this.message_array",this.message_array)
      });
    },
  },
  created() {
    //1:连接端口
    try {
      ws = new WebSocket("ws://120.24.26.46:8282");
      

      console.log(ws);
    } catch (error) {
      console.log("异常");
      console.log(error);
    }
    //刷新用户列表
    this.setUserList();

    

    this.sex = getBaseConfig("SEX", true);
    this.culture = getBaseConfig("DEGREE_EDUCATION", true); //文化
    this.marriage = getBaseConfig("MARITAL_CONDITION", true); //婚姻
    this.child = getBaseConfig("CHILDREN_EDUCATION", true); //子女
    this.belongsDisease = getBaseConfig("AFFILIATED_DISEASE", true); //所属疾病
    this.body = getBaseConfig("PHYSICAL_CONDITION", true); //身体状况
    this.livingEnvironment = getBaseConfig("LIVING_CONDITION", true); //居住环境
    this.medicalInsurance = getBaseConfig("HEALTH_INSURANCE_TYPE", true); //医保
    this.economic = getBaseConfig("SOURCE_FINANCE", true); //
  },
  mounted() {
    //接收消息时
      ws.onmessage = this.handleMessage;
  }
};
</script>


<style lang="less" scoped>
/deep/ .el-tabs__content {
  height: 100%;
}
.el-tab-pane {
  height: 100%;
}
.conter {
  width: 100%;
  display: flex;
  background-color: #fff;
  height: 100%;
}
.fonter_conter {
  height: 70%;
}
.fonter_btn {
  height: 30%;
}
.left {
  width: 30%;
  background-color: aliceblue;
  border: 1px solid floralwhite;
}
.seach {
  display: flex;
}
.right {
  width: 70%;
}
</style>
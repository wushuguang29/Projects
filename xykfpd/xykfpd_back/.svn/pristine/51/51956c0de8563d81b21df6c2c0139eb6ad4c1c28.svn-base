<?php

namespace app\api\controller;

use think\Controller;
use think\Db;
use think\facade\Cache;
use think\Request;
use think\facade\Config;
use app\api\validate\LoginValidate;
use app\common\model\AppUsersAuthModel;
use wxapp\WXBizDataCrypt;
use alipay\aop\AopClient;
use alipay\aop\request\AlipaySystemOauthTokenRequest;
use alipay\aop\request\AlipayUserInfoShareRequest;

/**
 * app登录管理
 * @package app\index\controller
 */
class Login extends Controller
{
    protected $userId;//用户id
    protected $wechat_appid;//微信appid
    protected $wechat_appsecret;//微信appsecret
    protected $appid;//支付宝appid
    protected $prikey; //应用私钥
    protected $alipubkey;//支付宝公钥
    public function initialize()
    {
        $this->wechat_appid = 'wxe3a28c8a762691d9';
        $this->wechat_appsecret = '5d8514528d227c39b70f61c4f593c7e2';
        $this->appid = Config::get('config.APPID');
        $this->prikey = Config::get('config.PRIVATE_KEY');
        $this->alipubkey = Config::get('config.ALI_PUBLIC_KEY');
        $this->userId = session("user_id") ? session("user_id") : '';
    }
    /**
     * 登录
     */
    public function login(Request $request, LoginValidate $loginValidate)
    {
        $param = $loginValidate->goCheck($request->param(), 'loginType');
        switch (intval($param['login_type'])) {

            case 1: //微信登录
                $loginValidate->goCheck($param, 'wechat');

                return $this->wechat($param);

            case 2: //支付宝登录
                if (!isset($param['auth_code'])) {
                    $appid = $this->appid; //appid
                    $redirect_uri = urlencode($request->url(true));
                    $state = md5(uniqid(rand(), true));
                    $url = 'https://openauth.alipay.com/oauth2/publicAppAuthorize.htm?app_id='.$appid.'&scope=auth_user&redirect_uri='.$redirect_uri.'&state='.$state;
                    header('Location:' . $url);
                    exit;
                } else {
                    return $this->alipay($param);
                }

            case 3: //手机短信登录
                $loginValidate->goCheck($param, 'phone');

                return $this->phoneLogin($param);

            default:
                return msgReturn(43001);

        }
    }

    /**
     * 手机短信登录
     */
    public function phoneLogin($data)
    {
        //判断手机验证码是否过期
        $cache_phone = Cache::get($data['phone_key']);
        if (!$cache_phone) {
            return msgReturn(43006);
        }

        //判断登录手机号与接受短信手机号是否一致
        if ($cache_phone['phone'] !== $data['phone']) {
            return msgReturn(43017);
        }

        //判断验证码是否正确
        if ($cache_phone['code'] !== $data['phone_code']) {
            return msgReturn(43006);
        }

        $userId   = AppUsersAuthModel::saveOauth($data, 3);
        if (empty($userId)) {
            return msgReturn(50001, '登录失败');
        }
        $userInfo     = Db::name("app_users")->where('id', $userId)->find();
        //删除缓存
        Cache::rm($data['phone_key']);
        return msgReturn(45010, $userInfo);
    }

    /**
     * 微信授权登录
     */
    public function wechat($data)
    {
        $appid          = $this->wechat_appid; //appid
        $appsecret      = $this->wechat_appsecret; //appsecret
        $code           = $data['code']; //登录会话
        $encryptedData  = $data['encryptedData']; //加密信息
        $iv             = $data['iv'];
        $signature      = $data['signature'];
        $rawData        = $data['rawData'];

        //通过 code 发送请求获取 session_key
        $res = $this->sendCode($appid, $appsecret, $code);
        $sessionKey = $res['session_key'];
        //验证签名
        $signature2 =  sha1(htmlspecialchars_decode($rawData).$sessionKey);
        // 验证签名
        if ($signature2 !== $signature){
            return msgReturn(50001, '验签失败');
        }
        // 进行解密
        $userInfo = $this->getUserInfo($appid, $sessionKey, $encryptedData, $iv);
        $userId   = AppUsersAuthModel::saveOauth($userInfo, 1);
        if (empty($userId)) {
            return msgReturn(50001, '登录失败');
        }
        $userInfo['userId'] = $userId;
        $data     = Db::name("app_users")->where('id', $userId)->find();
        $userInfo['is_phone_auth'] = $data['is_phone_auth'];
        $userInfo['phone']          = $data['phone'];
        return msgReturn(45010, $userInfo);
    }

    /**
     * 微信用户信息解密
     */
    private function getUserInfo($appid, $session_key, $encryptedData, $iv)
    {
        //进行解密
        $pc         = new WXBizDataCrypt($appid, $session_key);
        $errCode    = $pc->decryptData($encryptedData, $iv, $data);
        //判断解密是否成功
        if ($errCode != 0) {
            return msgReturn(50001, '解密失败');
        }
        //返回解密数据
        return json_decode($data, true);
    }

    /**
     * 获取微信openid、session_key等信息
     */
    private function sendCode($appid, $appsecret, $code)
    {
        // 拼接请求地址
        $url = 'https://api.weixin.qq.com/sns/jscode2session?appid='
            . $appid . '&secret=' . $appsecret . '&js_code='
            . $code . '&grant_type=authorization_code';
        return json_decode(curl_get($url), true);
    }

    /**
     * 支付宝登录
     */
    public function alipay($data)
    {
        //获取授权token
        $auth_code = $data['auth_code'];
        $aop = new AopClient ();
        $aop->gatewayUrl = 'https://openapi.alipay.com/gateway.do';
        $aop->appId = $this->appid;
        $aop->rsaPrivateKey = $this->prikey;
        $aop->alipayrsaPublicKey = $this->alipubkey;
        $aop->apiVersion = '1.0';
        $aop->signType = 'RSA2';
        $aop->postCharset='utf-8';
        $aop->format='json';
        $request = new AlipaySystemOauthTokenRequest ();
        $request->setGrantType("authorization_code");
        $request->setCode($auth_code);
        $result = $aop->execute ($request);
        if(isset($result->alipay_system_oauth_token_response->access_token))
        {
            //获取会员信息
            $requests = new AlipayUserInfoShareRequest ();
            $results = $aop->execute ( $requests , $result->alipay_system_oauth_token_response->access_token );
            if($results->alipay_user_info_share_response->code == 10000)
            {
                //保存数据
                $userInfo['user_id'] = $result->alipay_system_oauth_token_response->user_id;
                $userInfo['access_token'] = $result->alipay_system_oauth_token_response->access_token;
                $userInfo['avatar'] = $results->alipay_user_info_share_response->avatar;
                $userInfo['province'] = $results->alipay_user_info_share_response->province;
                $userInfo['city'] = $results->alipay_user_info_share_response->city;
                $userInfo['gender'] = $results->alipay_user_info_share_response->gender;
                $userInfo['nick_name'] = $results->alipay_user_info_share_response->nick_name;
                $userId   = AppUsersAuthModel::saveOauth($userInfo, 2);
                if (empty($userId)) {
                    return msgReturn(50001, '登录失败');
                }
                $userInfo['userId'] = $userId;
                $data     = Db::name("app_users")->where('id', $userId)->find();
                $userInfo['is_phone_auth'] = $data['is_phone_auth'];
                $userInfo['phone']          = $data['phone'];
                return msgReturn(45010, $userInfo);
            }else{
                return msgReturn(50001, '登录异常');
            }
        }else{
            return msgReturn(50001, '登录异常');
        }
    }
}
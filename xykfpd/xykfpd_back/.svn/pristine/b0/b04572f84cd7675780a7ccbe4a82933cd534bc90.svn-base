<?php

namespace app\index\controller;

use app\common\model\QuestionsModel;
use think\Controller;
use think\Db;
use think\Request;
use app\common\model\FileModel;

/**
 * 康复题库管理
 * @package app\index\controller
 */
class Questions extends Controller
{
    protected $fileId      = [];//文件id
    protected $visit_path = [];//访问路径
    protected $errorMsg    = [];//错误信息
    /**
     * 康复题库管理列表
     */
    public function getList()
    {
        $domain     = input('domain');
        $search     = input('search');
        $start      = input('start') ? input('start') : 0;
        $limit      = input('limit') ? input('limit') : 25;
        $where      = [];
        if (!empty($domain)) {
            $where[] = array('domain', 'eq', $domain);
        }
        if (!empty($search)) {
            $where[] = array('side', 'like', '%'.$search.'%');
        }
        $db = Db::table('questions')->field([
                'id',
                'domain',
                'side',
                'identification_code',
                'question_type',
                'instruction',
                "CONCAT(serial_number,'、',question_title) AS question_title",
            ])
            ->where($where)
            ->group('id');
        $data  = $db->order('domain,side,serial_number ASC')->limit($start, $limit)->select();
        $total = $db->count();
        foreach ($data as $ko => $vo) {
            $data[$ko]['option_title'] = QuestionsModel::dealOption($vo['id']);
        }
        return msgReturn(0, [
            'total' => $total,
            'data' => $data
        ]);
    }


    /**
     * 康复题库添加
     */
    public function add()
    {
        $param = input();
        return QuestionsModel::add($param);
    }

    /**
     * 康复题库编辑
     */
    public function edit()
    {
        $param = input();
        return QuestionsModel::edit($param);
    }

    /**
     * 康复题库删除
     */
    public function delete()
    {
        $id = input('id');
        if (empty($id)) {
            return msgReturn(42011);
        }
        Db::startTrans();
        try {
            Db::table('questions')->where('id', $id)->delete();
            Db::table('questions_option')->where('questions_id', $id)->delete();
            Db::commit();
            return msgReturn(45001);
        } catch (\Exception $e) {
            Db::rollback();
            return msgReturn(46001);
        }
    }

    /**
     * 康复题库查看/编辑回显
     */
    public function browse()
    {
        $param['id'] = input('id');
        return QuestionsModel::browse($param);
    }

    /**
     * 获取语音
     */
    public function getVoice()
    {
        $param['id'] = input('id');
        return (new QuestionsModel())->getVoice($param);
    }

    /*
     * 语音上传
     */
    public function upload(Request $request,FileModel $fileModel,QuestionsModel $model)
    {
        $file       = $request->file('file');
        $target_id  = $request->id;
        $validate = $fileModel->validate($file);
        $info = $file->getInfo();
        if ($validate["status"] == false) {
            array_push($this->errorMsg,$info["name"].$validate["msg"]);
        }else {
            $result = $model->upload($file, $info, USER_ID, $target_id);
            if($result["status"] == false){
                array_push($this->errorMsg,$result["data"]["error_msg"]);
            }else{
                if(!empty($result["data"]["error_msg"])){
                    array_push($this->errorMsg,$result["data"]["error_msg"]);
                }
                array_push($this->fileId,(int)$result["data"]["file_id"]);
                array_push($this->visit_path,$result["data"]["visit_path"]);
            }
        }
        #上传成功
        if(empty($this->errorMsg)){
            return msgReturn(0,array( "file_id"=>array_unique($this->fileId), 'path'=>array_unique($this->visit_path)));
        }else{
            return msgReturn(0,array(
                "file_id"=>array_unique($this->fileId), 'path'=>array_unique($this->visit_path)
            ),$this->errorMsg);
        }
    }
}